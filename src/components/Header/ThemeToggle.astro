---
import ThemeModeSun from "../../icons/ui/ThemeModeSun.astro";
import ThemeModeMoon from "../../icons/ui/ThemeModeMoon.astro";
---

<button
	type="button"
	id="theme-toggle"
	class="btn btn-square btn-ghost swap swap-rotate active:bg-base-300"
	aria-label="Toggle theme to Light Mode"
	aria-describedby="tooltip-text"
	onclick="handleToggleClick()"
>
	<span class="tooltip tooltip-bottom absolute right-20 top-8" id="tooltip-text" role="tooltip">
	</span>

	<ThemeModeSun size="24" />
	<ThemeModeMoon size="24" />
</button>

<script is:inline>
	let tooltipTimeout;

	const getInitialTheme = () => {
		if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
			return localStorage.getItem("theme");
		}

		if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
			return "dark";
		}

		return "light";
	};

	const updateTheme = (theme) => {
		document.documentElement.setAttribute(
			"data-theme",
			theme === "dark" ? "dracula" : "dracula-light",
		);

		const element = document.documentElement;
		element.classList.remove("dark", "light");
		element.classList.add(theme);

		const tooltipText = theme === "dark" ? "Dark Mode Activated" : "Light Mode Activated";

		const tooltipElement = document.getElementById("tooltip-text");
		tooltipElement.setAttribute("data-tip", tooltipText);
		tooltipElement.setAttribute("aria-label", tooltipText);

		const toggleButton = document.getElementById("theme-toggle");
		toggleButton.classList.toggle("swap-active", theme === "dark");

		const buttonAriaLabel = `Toggle Theme to ${theme === "dark" ? "Light" : "Dark"} Mode`;
		toggleButton.setAttribute("aria-label", buttonAriaLabel);
	};

	const showTooltipTemporarily = () => {
		const tooltip = document.getElementById("tooltip-text");

		tooltip.classList.add("tooltip-open");

		clearTimeout(tooltipTimeout);

		tooltipTimeout = setTimeout(() => {
			tooltip.classList.remove("tooltip-open");
		}, 1000);
	};

	const handleToggleClick = () => {
		const isDark = !document.documentElement.classList.contains("dark");
		const newTheme = isDark ? "dark" : "light";

		localStorage.setItem("theme", newTheme);
		updateTheme(newTheme);
		showTooltipTemporarily();
	};

	const initialTheme = getInitialTheme();
	updateTheme(initialTheme);
</script>

<style>
	.tooltip:after {
		transform: translateX(-50%);
		left: 55px;
	}
</style>
