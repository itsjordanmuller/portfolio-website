---
import AstroLogo from "../../icons/logos/AstroLogo.astro";
import HTMLLogo from "../../icons/logos/HTMLLogo.astro";
import CSSLogo from "../../icons/logos/CSSLogo.astro";
import JavaScriptLogo from "../../icons/logos/JavaScriptLogo.astro";
import ReactLogo from "../../icons/logos/ReactLogo.astro";
import PythonLogo from "../../icons/logos/PythonLogo.astro";
import JupyterLogo from "../../icons/logos/JupyterLogo.astro";
import TypeScriptLogo from "../../icons/logos/TypeScriptLogo.astro";
import FlaskLogo from "../../icons/logos/FlaskLogo.astro";
import MatplotlibLogo from "../../icons/logos/MatplotlibLogo.astro";
import PlotlyLogo from "../../icons/logos/PlotlyLogo.astro";
import SciKitLearnLogo from "../../icons/logos/SciKitLearn-Logo.astro";
import SQLiteLogo from "../../icons/logos/SQLiteLogo.astro";
import SQLAlchemyLogo from "../../icons/logos/SQLAlchemyLogo.astro";
import DotEnvLogo from "../../icons/logos/DotEnvLogo.astro";
import PyPILogo from "../../icons/logos/PyPILogo.astro";
import ESLintLogo from "../../icons/logos/ESLintLogo.astro";
import PrettierLogo from "../../icons/logos/PrettierLogo.astro";
import VSCodeLogo from "../../icons/logos/VSCodeLogo.astro";
import GitLogo from "../../icons/logos/GitLogo.astro";
import GitHubLogo from "../../icons/logos/social/GitHubLogo.astro";
import NodeJSLogo from "../../icons/logos/NodeJSLogo.astro";
import JestLogo from "../../icons/logos/JestLogo.astro";
import WebpackLogo from "../../icons/logos/WebpackLogo.astro";
import JSONLogo from "../../icons/logos/JSONLogo.astro";
import MarkdownLogo from "../../icons/logos/MarkdownLogo.astro";
import MDXLogo from "../../icons/logos/MDXLogo.astro";
import PWALogo from "../../icons/logos/PWALogo.astro";
import JamstackLogo from "../../icons/logos/JamstackLogo.astro";
import TailwindCSSLogo from "../../icons/logos/TailwindCSSLogo.astro";
import DaisyUILogo from "../../icons/logos/DaisyUILogo.astro";
import NanoIDLogo from "../../icons/logos/NanoIDLogo.astro";
import PagefindLogo from "../../icons/logos/PagefindLogo.astro";
import PostCSSLogo from "../../icons/logos/PostCSSLogo.astro";
import LinuxLogo from "../../icons/logos/LinuxLogo.astro";
import DebianLogo from "../../icons/logos/DebianLogo.astro";
import UbuntuLogo from "../../icons/logos/UbuntuLogo.astro";
import KubuntuLogo from "../../icons/logos/KubuntuLogo.astro";
import KDELogo from "../../icons/logos/KDELogo.astro";
import NPMLogo from "../../icons/logos/NPMLogo.astro";
import ViteLogo from "../../icons/logos/ViteLogo.astro";
import AutoprefixerLogo from "../../icons/logos/AutoprefixerLogo.astro";
import BashLogo from "../../icons/logos/BashLogo.astro";
import IconifyLogo from "../../icons/logos/IconifyLogo.astro";
import NetlifyLogo from "../../icons/logos/NetlifyLogo.astro";
import UnsplashLogo from "../../icons/logos/UnsplashLogo.astro";
import AxiosLogo from "../../icons/logos/AxiosLogo.astro";
import ReactRouterLogo from "../../icons/logos/ReactRouterLogo.astro";
import ReactQueryLogo from "../../icons/logos/ReactQueryLogo.astro";
import ReduxLogo from "../../icons/logos/ReduxLogo.astro";
import ContentfulLogo from "../../icons/logos/ContentfulLogo.astro";
import NumPyLogo from "../../icons/logos/NumPyLogo.astro";
import PandasLogo from "../../icons/logos/PandasLogo.astro";
import CodePenLogo from "../../icons/logos/social/CodePenLogo.astro";
import BabelLogo from "../../icons/logos/BabelLogo.astro";
import BeautifulSoupLogo from "../../icons/logos/BeautifulSoupLogo.astro";
import BootstrapLogo from "../../icons/logos/BootstrapLogo.astro";
import ColorgramLogo from "../../icons/logos/ColorgramLogo.astro";
import ExpressLogo from "../../icons/logos/ExpressLogo.astro";
import FigmaLogo from "../../icons/logos/FigmaLogo.astro";
import FontAwesomeLogo from "../../icons/logos/FontAwesomeLogo.astro";
import JinjaLogo from "../../icons/logos/JinjaLogo.astro";
import JWTLogo from "../../icons/logos/JWTLogo.astro";
import MongoDBLogo from "../../icons/logos/MongoDBLogo.astro";
import MongooseLogo from "../../icons/logos/MongooseLogo.astro";
import NodemonLogo from "../../icons/logos/NodemonLogo.astro";
import PostmanLogo from "../../icons/logos/PostmanLogo.astro";
import PyperclipLogo from "../../icons/logos/PyperclipLogo.astro";
import ReactToastifyLogo from "../../icons/logos/ReactToastifyLogo.astro";
import RedisLogo from "../../icons/logos/RedisLogo.astro";
import RequestsLogo from "../../icons/logos/RequestsLogo.astro";
import SciPyLogo from "../../icons/logos/SciPyLogo.astro";
import SeabornLogo from "../../icons/logos/SeabornLogo.astro";
import SeleniumLogo from "../../icons/logos/SeleniumLogo.astro";
import StrapiLogo from "../../icons/logos/StrapiLogo.astro";
import SwiperJSLogo from "../../icons/logos/SwiperJSLogo.astro";
import UUIDLogo from "../../icons/logos/UUIDLogo.astro";
import StyledComponentsLogo from "../../icons/logos/StyledComponentsLogo.astro";
import BlackFormatterLogo from "../../icons/logos/BlackFormatterLogo.astro";
import CORSLogo from "../../icons/logos/CORSLogo.astro";
import Calendar from "../../icons/topics/Calendar.astro";
import RobotAI from "../../icons/topics/RobotAI.astro";
import Backend from "../../icons/topics/Backend.astro";
import ECommerce from "../../icons/topics/ECommerce.astro";
import Entertainment from "../../icons/topics/Entertainment.astro";
import Frontend from "../../icons/topics/Frontend.astro";
import MachineLearning from "../../icons/topics/MachineLearning.astro";
import NeuralNetworks from "../../icons/topics/NeuralNetworks.astro";
import Shopping from "../../icons/topics/Shopping.astro";
import Tasks from "../../icons/topics/Tasks.astro";
import Video from "../../icons/topics/Video.astro";
import Food from "../../icons/topics/Food.astro";
import CreateReactAppLogo from "../../icons/logos/CreateReactAppLogo.astro";
import MacOSLogo from "../../icons/logos/MacOSLogo.astro";
import WindowsLogo from "../../icons/logos/WindowsLogo.astro";

const { tags, contentType } = Astro.props;

interface TagModifications {
	displayText?: string;
	fill?: string;
	btnClasses?: string;
	iconClasses?: string;
	importance?: number;
}

interface TagDetails {
	[key: string]: TagModifications;
}

const iconComponents: { [key: string]: any } = {
	astro: AstroLogo,
	html: HTMLLogo,
	css: CSSLogo,
	javascript: JavaScriptLogo,
	typescript: TypeScriptLogo,
	react: ReactLogo,
	python: PythonLogo,
	jupyter: JupyterLogo,
	flask: FlaskLogo,
	matplotlib: MatplotlibLogo,
	plotly: PlotlyLogo,
	"scikit-learn": SciKitLearnLogo,
	sqlite: SQLiteLogo,
	"sql-alchemy": SQLAlchemyLogo,
	dotenv: DotEnvLogo,
	"py-pi": PyPILogo,
	"es-lint": ESLintLogo,
	prettier: PrettierLogo,
	"vs-code": VSCodeLogo,
	git: GitLogo,
	github: GitHubLogo,
	"node-js": NodeJSLogo,
	jest: JestLogo,
	webpack: WebpackLogo,
	json: JSONLogo,
	markdown: MarkdownLogo,
	mdx: MDXLogo,
	pwa: PWALogo,
	jamstack: JamstackLogo,
	"tailwind-css": TailwindCSSLogo,
	"daisy-ui": DaisyUILogo,
	"nano-id": NanoIDLogo,
	pagefind: PagefindLogo,
	"post-css": PostCSSLogo,
	linux: LinuxLogo,
	debian: DebianLogo,
	ubuntu: UbuntuLogo,
	kubuntu: KubuntuLogo,
	kde: KDELogo,
	npm: NPMLogo,
	vite: ViteLogo,
	autoprefixer: AutoprefixerLogo,
	bash: BashLogo,
	iconify: IconifyLogo,
	netlify: NetlifyLogo,
	unsplash: UnsplashLogo,
	axios: AxiosLogo,
	"react-router": ReactRouterLogo,
	"react-query": ReactQueryLogo,
	"redux-toolkit": ReduxLogo,
	"create-react-app": CreateReactAppLogo,
	contentful: ContentfulLogo,
	"num-py": NumPyLogo,
	pandas: PandasLogo,
	codepen: CodePenLogo,
	babel: BabelLogo,
	"beautiful-soup": BeautifulSoupLogo,
	bootstrap: BootstrapLogo,
	colorgram: ColorgramLogo,
	express: ExpressLogo,
	figma: FigmaLogo,
	"font-awesome": FontAwesomeLogo,
	jinja: JinjaLogo,
	jwt: JWTLogo,
	"mongo-db": MongoDBLogo,
	mongoose: MongooseLogo,
	nodemon: NodemonLogo,
	postman: PostmanLogo,
	pyperclip: PyperclipLogo,
	"react-toastify": ReactToastifyLogo,
	redis: RedisLogo,
	requests: RequestsLogo,
	"sci-py": SciPyLogo,
	seaborn: SeabornLogo,
	selenium: SeleniumLogo,
	strapi: StrapiLogo,
	"styled-components": StyledComponentsLogo,
	"swiper-js": SwiperJSLogo,
	uuid: UUIDLogo,
	redux: ReduxLogo,
	"react-redux": ReduxLogo,
	"pillow-pil": PythonLogo,
	"black-formatter": BlackFormatterLogo,
	cors: CORSLogo,
	"100-days": Calendar,
	"50-days": Calendar,
	ai: RobotAI,
	"machine-learning": MachineLearning,
	"neural-networks": NeuralNetworks,
	cnns: NeuralNetworks,
	"front-end": Frontend,
	"back-end": Backend,
	"e-commerce": ECommerce,
	store: Shopping,
	movies: Video,
	television: Video,
	entertainment: Entertainment,
	"shopping-list": Tasks,
	"food-menu": Food,
	"calorie-tracker": Food,
	morgan: RequestsLogo,
	"mac-os": MacOSLogo,
	windows: WindowsLogo,
};

const tagDetails: TagDetails = {
	astro: {
		btnClasses: "bg-[#FF5D01] text-[#ffffff] border-[#FF5D01]",
		importance: 6,
	},
	bootstrap: {
		btnClasses: "bg-[#7952B3] text-[#ffffff] border-[#7952B3]",
	},
	express: {
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	jinja: {
		btnClasses: "bg-[#B41717] text-[#ffffff] border-[#B41717]",
	},
	redis: {
		btnClasses: "bg-[#DC382D] text-[#ffffff] border-[#DC382D]",
	},
	seaborn: {
		btnClasses: "bg-[#78AAB7] text-[#ffffff] border-[#78AAB7]",
	},
	flask: {
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	"beautiful-soup": {
		btnClasses: "bg-[#F8F8F2] text-[#000000] border-[#F8F8F2]",
	},
	"styled-components": {
		btnClasses: "bg-[#DB7093] text-[#ffffff] border-[#DB7093]",
	},
	selenium: {
		btnClasses: "bg-[#43B02A] text-[#ffffff] border-[#43B02A]",
	},
	figma: {
		btnClasses: "bg-[#F24E1E] text-[#ffffff] border-[#F24E1E]",
	},
	jwt: {
		btnClasses: "bg-[#F8F8F2] text-[#000000] border-[#F8F8F2]",
	},
	postman: {
		btnClasses: "bg-[#FF6C37] text-[#ffffff] border-[#FF6C37]",
	},
	colorgram: {
		btnClasses: "bg-[#FFC0CB] text-[#000000] border-[#FFC0CB]",
	},
	matplotlib: {
		btnClasses: "bg-[#185A80] text-[#ffffff] border-[#185A80]",
	},
	plotly: {
		btnClasses: "bg-[#3F4F75] text-[#ffffff] border-[#3F4F75]",
	},
	html: {
		btnClasses: "bg-[#E34F26] text-[#ffffff] btn-outline border-[#E34F26]",
		importance: 10,
	},
	javascript: {
		displayText: "JavaScript",
		btnClasses: "bg-[#F7DF1E] text-[#000000] border-[#F7DF1E] hover:text-base-content",
		importance: 8,
	},
	typescript: {
		displayText: "TypeScript",
		btnClasses: "bg-[#007ACC] text-[#ffffff] border-[#007ACC]",
		importance: 7,
	},
	css: {
		btnClasses: "bg-[#1572B6] text-[#ffffff] border-[#1572B6]",
		importance: 9,
	},
	python: {
		fill: "#FFDD54",
		btnClasses: "bg-[#1572B6] text-[#ffffff] border-[#1572B6]",
		importance: 10,
	},
	react: {
		btnClasses: "bg-[#61DAFB] text-[#000000] border-[#61DAFB]",
		importance: 6,
	},
	resume: {
		displayText: "Resume",
		importance: 10,
	},
	certificates: {
		displayText: "Certificates",
		importance: 9,
	},
	pdf: {
		displayText: "PDF",
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
		importance: 8,
	},
	documents: {
		displayText: "Documents",
		importance: 8,
	},
	agile: {
		displayText: "Agile",
		importance: 7,
	},
	scrum: {
		displayText: "Scrum",
		importance: 6,
	},
	"itil-4": {
		displayText: "ITIL 4",
		importance: 5,
	},
	"psm-1": {
		displayText: "PSM 1",
		importance: 5,
	},
	jupyter: {
		btnClasses: "bg-[#F37626] text-[#ffffff] border-[#F37626]",
	},
	"e-commerce": {
		displayText: "E-Commerce",
	},
	ai: {
		displayText: "AI",
	},
	"machine-learning": {
		displayText: "Machine Learning",
	},
	"neural-networks": {
		displayText: "Neural Networks",
	},
	cnns: {
		displayText: "CNNs",
	},
	"scrum-org": {
		displayText: "Scrum.org",
	},
	"tailwind-css": {
		displayText: "Tailwind CSS",
		btnClasses: "bg-[#06B6D4] text-[#ffffff] border-[#06B6D4]",
	},
	"daisy-ui": {
		displayText: "daisyUI",
		btnClasses: "bg-[#5A0EF8] text-[#ffffff] border-[#5A0EF8]",
	},
	"node-js": {
		displayText: "Node.js",
		btnClasses: "bg-[#339933] text-[#ffffff] border-[#339933]",
	},
	npm: {
		displayText: "npm",
		btnClasses: "bg-[#CB3837] text-[#ffffff] border-[#CB3837]",
	},
	vite: {
		displayText: "Vite",
		btnClasses: "bg-[#646CFF] text-[#ffffff] border-[#646CFF]",
	},
	jest: {
		displayText: "Jest",
		btnClasses: "bg-[#C21325] text-[#ffffff] border-[#C21325]",
	},
	"scikit-learn": {
		displayText: "scikit-learn",
		btnClasses: "bg-[#F7931E] text-[#ffffff] border-[#F7931E]",
	},
	sqlite: {
		displayText: "SQLite",
		btnClasses: "bg-[#003B57] text-[#ffffff] border-[#003B57]",
	},
	"sql-alchemy": {
		displayText: "SQLAlchemy",
		btnClasses: "bg-[#D71F00] text-[#ffffff] border-[#D71F00]",
	},
	"num-py": {
		displayText: "NumPy",
		importance: 6,
		btnClasses: "bg-[#013243] text-[#ffffff] border-[#013243]",
	},
	"py-pi": {
		displayText: "PyPI",
		btnClasses: "bg-[#3775A9] text-[#ffffff] border-[#3775A9]",
	},
	"es-lint": {
		displayText: "ESLint",
		btnClasses: "bg-[#4B32C3] text-[#ffffff] border-[#4B32C3]",
	},
	git: {
		displayText: "git",
		btnClasses: "bg-[#F05032] text-[#ffffff] border-[#F05032]",
	},
	"vs-code": {
		displayText: "VS Code",
		btnClasses: "bg-[#007ACC] text-[#ffffff] border-[#007ACC]",
	},
	github: {
		displayText: "GitHub",
		btnClasses: "bg-[#181717] text-[#ffffff] border-[#181717]",
	},
	dotenv: {
		displayText: ".env",
		importance: 5,
		btnClasses: "bg-[#F7DF1E] text-[#000000] border-[#F7DF1E]",
	},
	pagefind: {
		displayText: "Pagefind",
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	"post-css": {
		displayText: "PostCSS",
		btnClasses: "bg-[#DD3A0A] text-[#ffffff] border-[#DD3A0A]",
	},
	bash: {
		displayText: "Bash",
		btnClasses: "bg-[#8edf6a] text-[#000000] border-[#8edf6a]",
	},
	"nano-id": {
		displayText: "nanoid",
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	prettier: {
		btnClasses: "bg-[#F7B93E] text-[#000000] border-[#F7B93E]",
	},
	"black-formatter": {
		displayText: "Black Formatter",
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	webpack: {
		btnClasses: "bg-[#8DD6F9] text-[#000000] border-[#8DD6F9]",
	},
	json: {
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	markdown: {
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	mdx: {
		btnClasses: "bg-[#1B1F24] text-[#ffffff] border-[#1B1F24]",
	},
	pwa: {
		btnClasses: "bg-[#5A0FC8] text-[#ffffff] border-[#5A0FC8]",
	},
	jamstack: {
		btnClasses: "bg-[#F0047F] text-[#ffffff] border-[#F0047F]",
	},
	linux: {
		btnClasses: "bg-[#FCC624] text-[#000000] border-[#FCC624]",
	},
	debian: {
		btnClasses: "bg-[#A81D33] text-[#ffffff] border-[#A81D33]",
	},
	ubuntu: {
		btnClasses: "bg-[#E95420] text-[#ffffff] border-[#E95420]",
	},
	kubuntu: {
		btnClasses: "bg-[#0079C1] text-[#ffffff] border-[#0079C1]",
	},
	kde: {
		btnClasses: "bg-[#1D99F3] text-[#ffffff] border-[#1D99F3]",
	},
	autoprefixer: {
		btnClasses: "bg-[#DD3735] text-[#ffffff] border-[#DD3735]",
	},
	iconify: {
		btnClasses: "bg-[#1769AA] text-[#ffffff] border-[#1769AA]",
	},
	netlify: {
		btnClasses: "bg-[#00C7B7] text-[#ffffff] border-[#00C7B7]",
	},
	unsplash: {
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	axios: {
		btnClasses: "bg-[#5A29E4] text-[#ffffff] border-[#5A29E4]",
	},
	strapi: {
		btnClasses: "bg-[#4945FF] text-[#ffffff] border-[#4945FF]",
	},
	"react-router": {
		btnClasses: "bg-[#CA4245] text-[#ffffff] border-[#CA4245]",
	},
	"react-query": {
		btnClasses: "bg-[#FF4154] text-[#ffffff] border-[#FF4154]",
	},
	"redux-toolkit": {
		btnClasses: "bg-[#494CBF] text-[#ffffff] border-[#494CBF]",
	},
	"react-redux": {
		btnClasses: "bg-[#61DAFB] text-[#ffffff] border-[#61DAFB]",
	},
	"react-toastify": {
		btnClasses: "bg-[#9a6e61] text-[#ffffff] border-[#9a6e61]",
	},
	redux: {
		btnClasses: "bg-[#7147B5] text-[#ffffff] border-[#7147B5]",
	},
	"create-react-app": {
		fill: "#11D4AF",
		btnClasses: "bg-[#2F333A] text-[#ffffff] border-[#2F333A]",
	},
	contentful: {
		btnClasses: "bg-[#F8F8F2] text-[#000000] border-[#F8F8F2]",
	},
	pandas: {
		displayText: "pandas",
		importance: 6,
		btnClasses: "bg-[#150458] text-[#ffffff] border-[#150458]",
	},
	codepen: {
		displayText: "CodePen",
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	"font-awesome": {
		btnClasses: "bg-[#528DD7] text-[#ffffff] border-[#528DD7]",
	},
	"sci-py": {
		displayText: "SciPy",
		btnClasses: "bg-[#8CAAE6] text-[#ffffff] border-[#8CAAE6]",
	},
	"pillow-pil": {
		displayText: "Pillow (PIL)",
		btnClasses: "bg-[#6F1E51] text-[#ffffff] border-[#6F1E51]",
	},
	"mongo-db": {
		displayText: "MongoDB",
		btnClasses: "bg-[#47A248] text-[#ffffff] border-[#47A248]",
	},
	mongoose: {
		btnClasses: "bg-[#880000] text-[#ffffff] border-[#880000]",
	},
	babel: {
		btnClasses: "bg-[#F9DC3E] text-[#000000] border-[#F9DC3E]",
	},
	requests: {
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	pyperclip: {
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	cors: {
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	morgan: {
		btnClasses: "bg-[#1B1464] text-[#ffffff] border-[#1B1464]",
	},
	nodemon: {
		btnClasses: "bg-[#76D04B] text-[#ffffff] border-[#76D04B]",
	},
	"swiper-js": {
		displayText: "Swiper.js",
		btnClasses: "bg-[#6332F6] text-[#ffffff] border-[#6332F6]",
	},
	uuid: {
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	"mac-os": {
		displayText: "macOS",
		btnClasses: "bg-[#000000] text-[#ffffff] border-[#000000]",
	},
	windows: {
		btnClasses: "bg-[#0078D4] text-[#ffffff] border-[#0078D4]",
	},
};

function getUrlPrefix(contentType: string): string {
	switch (contentType) {
		case "projects":
			return "/portfolio/tags/";
		case "posts":
			return "/blog/tags/";
		case "resources":
			return "/resources/tags/";
		default:
			return "/blog/tags/";
	}
}

function getTagDisplayAndClass(tag: string): TagModifications {
	const lowerCaseTag = tag.toLowerCase();
	const tagModifications = tagDetails[lowerCaseTag] || {};

	let displayText;

	if (tagModifications.displayText) {
		displayText = tagModifications.displayText;
	} else {
		const tagWithSpaces = tag.replace(/-/g, " ");
		if (tag.length <= 4) {
			displayText = tag.toUpperCase();
		} else {
			displayText = tagWithSpaces.replace(/\b(\w)/g, (char) => char.toUpperCase());
		}
	}

	return {
		displayText,
		btnClasses: tagModifications.btnClasses || "btn-outline",
		fill: tagModifications.fill,
	};
}

tags.sort((a: string, b: string) => {
	const importanceA = tagDetails[a.toLowerCase()]?.importance || 0;
	const importanceB = tagDetails[b.toLowerCase()]?.importance || 0;

	if (importanceA > 0 && importanceB > 0) {
		return importanceB - importanceA;
	} else if (importanceA > 0) {
		return -1;
	} else if (importanceB > 0) {
		return 1;
	}
	return 0;
});

const visibleTags = tags.slice(0, 10);
const hiddenTags = tags.slice(10);
---

<div class="rounded-2xl bg-base-100 p-2">
	<div class="flex flex-wrap justify-center gap-2 p-2" data-pagefind-ignore="all">
		{
			visibleTags.map((tag: string) => {
				const { displayText, btnClasses, fill } = getTagDisplayAndClass(tag);
				const IconComponent = iconComponents[tag.toLowerCase()];
				const urlPrefix = getUrlPrefix(contentType);
				return (
					<a
						href={`${urlPrefix}${tag}`}
						title={`Filter by ${tag}`}
						class={`btn h-auto ${btnClasses} btn-xs text-base md:btn-sm md:text-base`}
					>
						{IconComponent && <IconComponent size="16" fill={fill} />}
						{displayText}
					</a>
				);
			})
		}
	</div>
	{
		hiddenTags.length > 0 && (
			<>
				<hr class="mx-8 my-4" />
				<details class="collapse bg-base-200">
					<summary
						title="Open/Close Dropdown to View All Other Tags"
						class="cursor-pointer bg-base-300 py-4 text-center text-xl font-semibold text-base-content 
							focus-visible:bg-[#44475A]
							focus-visible:text-[#F8F8F2] active:bg-[#44475A] active:text-[#F8F8F2]"
						tabindex="0"
					>
						View All Other Tags
					</summary>
					<div class="collapse-content p-4">
						<div class="flex flex-wrap justify-center gap-2">
							{hiddenTags.map((tag: string) => {
								const { displayText, btnClasses, fill } = getTagDisplayAndClass(tag);
								const IconComponent = iconComponents[tag.toLowerCase()];
								const urlPrefix = getUrlPrefix(contentType);

								return (
									<a
										href={`${urlPrefix}${tag}`}
										title={`Filter by ${tag}`}
										class={`btn h-auto ${btnClasses} btn-xs text-base`}
									>
										{IconComponent && <IconComponent size="16" fill={fill} />}
										{displayText}
									</a>
								);
							})}
						</div>
					</div>
				</details>
			</>
		)
	}
</div>
