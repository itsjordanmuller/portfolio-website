---
import { getCollection } from "astro:content";

import Layout from "../../../layouts/Layout.astro";
import Resource from "../../../components/Resource.astro";
import TagRouteTagFilters from "../../../components/TagRouteTagFilters.astro";

export async function getStaticPaths() {
	const allResources = await getCollection("resources");
	const uniqueTags = [...new Set(allResources.map((resource) => resource.data.tags).flat())];

	return uniqueTags.map((tag) => {
		const filteredResources = allResources.filter((resource) => resource.data.tags.includes(tag));
		return {
			params: { tag },
			props: { resources: filteredResources },
		};
	});
}

const { tag } = Astro.params;
const { resources } = Astro.props;

const allResources = await getCollection("resources");
const uniqueTags = [...new Set(allResources.map((resource) => resource.data.tags).flat())];
---

<Layout
	pageTitle={`Resources - ${tag}`}
	description={`A collection of Resources & Documents Tagged with ${tag}`}
>
	<section
		class="lg-px-[6rem] container prose max-w-none bg-base-200 px-[2rem] py-10 sm:px-[5rem] md:px-[9rem] lg:px-[8rem] xl:px-[10rem] 2xl:px-[14rem]"
		data-pagefind-ignore="all"
	>
		<h1 class="mb-8 text-center">Resources & Documents</h1>
		<TagRouteTagFilters contentType="resources" uniqueTags={uniqueTags} tag={tag} />
		<hr class="mx-8" />
		<ul class="my-8 grid w-full grid-cols-1 gap-8 pl-0 md:grid-cols-2 lg:grid-cols-3">
			{
				resources.map((resource) => (
					<Resource
						title={resource.data.title}
						description={resource.data.description}
						cover={resource.data.cover}
						coverAlt={resource.data.coverAlt}
						url={resource.slug}
						type={resource.data.type}
					/>
				))
			}
		</ul>
	</section>
</Layout>
